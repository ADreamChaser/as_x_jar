使用：
1，扫描部分，Fragment已经封装完毕，具体参考CaptureActivity使用
2，解析图片，具体参考DecodeActivity使用
3，生成图片，具体参考EncodeActivity使用

模块：
camera: 调用摄像头预览，并得到byte[]
decode: 将byte[]解析出来，并回调到UI层
view: 预览界面
helper: 实现附加功能：生成二维码、解析图片二维码、日志统一管理、闪光灯和声音管理

配置：
1，解析支持的Reader: DecodeThread.attachBarcodeFormat()
2，日志开关: CodeManager.DEBUG
3，扫描成功声音和震动: BeepHelper.IS_PLAY_BEEP 和 BeepHelper.IS_VIBRATE
4，闪光灯模式: AmbientLightHelper.getLightMode()
5，拍照时设置
CameraConfigurationManager.AUTO_FOCUS       自动对焦
CameraConfigurationManager.INVERT_SCAN      扫描黑色背景上的白色条码。仅适用于部分设备。
CameraConfigurationManager.DISABLE_CONTINUOUS_FOCUS     使用标准对焦模式(不持续对焦)
CameraConfigurationManager.DISABLE_EXPOSURE     不曝光
CameraConfigurationManager.DISABLE_METERING     不使用距离测量
6，
界面大小: ViewfinderView.getFramingRect
屏幕真实大小: CameraManager.getFramingRect

7,条形码，参考：https://zh.wikipedia.org/wiki/%E6%9D%A1%E5%BD%A2%E7%A0%81
UPC_A		定长码，只能表示13位数字
UPC_E		短码，总长度位8个字码
EAN_13		欧洲商品条形码，总长度为13位
EAN_8		欧洲商品码，总长度为8位
CODABAR		过时，不推荐使用
CODE_39		长度不限制，简单方便实用，能够对0-9，A-Z，+-*/%$进行编码
CODE_93		128px，维基百科找不到相应链接
CODE_128	维基百科找不到相应链接
ITF			非零售包装的水平，交错2/5码
RSS_14			GS1的的 DataBar 的前身缩减码
RSS_EXPANDED

支付宝付款码的条形码使用的是：CODE_128
微信付款码的条形码使用的是：CODE_128
终上所述，推荐使用 CODE_128

调试：
1，Camera和Display的横竖方向:
日志，CameraConfigurationManager.initFromCameraParameters()，中打印了相关信息
ps: 方向上，在CameraConfigurationManager.setDesiredCameraParameters中，setDisplayOrientation已经做了适配
测试: 只要预览窗口正常，即没问题

2，Camera和Display的窗口大小:
UI展示Rect: CameraManager.getFramingRect()
预览解析Rect: CameraManager.getFramingRectInPreview()
ps: 已经进行横屏和竖屏的适配
测试: 1)，较为复杂度图，识别速度较快
2)，CameraManager.getFramingRect 和 CamaraManager.getFramingRectInPreview两个方法对应的Rect相同
